<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
<package name="lcl">
<!--
====================================================================
LCLMessageGlue
====================================================================
-->
<module name="LCLMessageGlue">
<short>
Contains routines used to send messages from widgetset classes to the LCL.
</short>
<descr>
<p>
<file>lclmessageglue.pas</file> is used to make the passing of messages to 
the LCL from the different widgetsets easier. Your mileage will vary if you 
try to use these procedures from within your program.
</p>
<p>
<file>lclmessageglue.pas</file> is part of the Lazarus Component Library 
(<b>LCL</b>).
</p>
</descr>

<!-- unresolved references -->
<element name="Classes"/>
<element name="Forms"/>
<element name="LCLClasses"/>
<element name="LCLProc"/>
<element name="Controls"/>
<element name="Messages"/>
<element name="LMessages"/>
<element name="LCLType"/>

<element name="DeliverMessage">
<short>
Delivers a message (TLMessage) to the specified component, control or object.
</short>
<descr>
<p>
<var>DeliverMessage</var> ensures that the reference count for a TLCLComponent 
descendant in Target is maintained during message delivery. The reference 
count is incremented prior to message delivery, and decremented when the 
operation is completed.
</p>
<p>
If Target is a TControl descendant, the TLMessage instance is sent to the 
WindowProc method in the control. For TObject descendants, the message is sent 
using the Dispatch method in the class instance.
</p>
<p>
An exception which occurs during message delivery is forwarded to the 
HandleException method in the Application.
</p>
</descr>
<seealso>
<link id="#lcl.lmessages.TLMessage">TLMessage</link>
<link id="#lcl.forms.Application">Application</link>
<link id="#lcl.forms.TApplication.HandleException">TApplication.HandleException</link>
<link id="#lcl.lclclasses.TLCLComponent">TLCLComponent</link>
<link id="#lcl.controls.TControl.WindowProc">TControl.WindowProc</link>
<link id="#rtl.system.TObject.Dispatch">TObject.Dispatch</link>
</seealso>
</element>
<element name="DeliverMessage.Result">
<short>
Pointer to the result code from the TLMessage instance.
</short>
</element>
<element name="DeliverMessage.Target">
<short>
Control or object where the message is delivered.
</short>
</element>
<element name="DeliverMessage.AMessage">
<short>
TLMessage instance with the message type constant and result code used in the 
routine.
</short>
</element>

<element name="SendSimpleMessage">
<short>
Creates, configures, and delivers a message to the specified target control.
</short>
<descr>
<p>
Calls DeliverMessage to apply or dispatch the message to the target.
</p>
</descr>
<seealso>
<link id="DeliverMessage"/>
<link id="#lcl.lmessages.TLMessage">TLMessage</link>
</seealso>
</element>
<element name="SendSimpleMessage.Result">
<short>
Pointer to the integer result code in the message. 0 if the message was 
accepted, non-zero if the message was rejected.
</short>
</element>
<element name="SendSimpleMessage.Target">
<short>
Control where the message is delivered.
</short>
</element>
<element name="SendSimpleMessage.Msg">
<short>
Message type constant sent in the simple message.
</short>
</element>

<element name="LCLSendActivateMsg">
<short>
Delivers a LM_ACTIVATE message to the specified target control.
</short>
<descr>
<p>
Calls DeliverMessage to apply or dispatch the message to the target.
</p>
</descr>
<seealso>
<link id="DeliverMessage"/>
<link id="#lcl.lmessages.TLMessage">TLMessage</link>
</seealso>
</element>
<element name="LCLSendActivateMsg.Result">
<short>
Pointer to the integer result code from the delivered message. 0 indicates the 
message was accepted. A non-zero value indicates the message was rejected.
</short>
</element>
<element name="LCLSendActivateMsg.Target">
<short>
The Control where the LM_ACTIVATE message is delivered.
</short>
</element>
<element name="LCLSendActivateMsg.Active">
<short>
Indicates if the control should be active.
</short>
</element>
<element name="LCLSendActivateMsg.Minimized">
<short>
<b>True</b> if the control should be minimized. <b>False</b> if the control is 
not in the minimized state.
</short>
</element>
<element name="LCLSendActivateMsg.ActiveWindow">
<short>
Optional handle for the current or newly active window for the control. 
Default value is 0.
</short>
</element>

<element name="LCLSendSetFocusMsg">
<short>
Sends a LM_SETFOCUS message to the target control.
</short>
<descr>
<p>
Calls SendSimpleMessage to send the message to the target.
</p>
</descr>
<seealso/>
</element>
<element name="LCLSendSetFocusMsg.Result">
<short>
Pointer to the Integer result code for the message. 0 indicates the message 
was accepted. A non-zero value indicates the message was rejected.
</short>
</element>
<element name="LCLSendSetFocusMsg.Target">
<short>
The control where the message is sent.
</short>
</element>

<element name="LCLSendKillFocusMsg">
<short>
Sends a LM_KILLFOCUS message to the target control.
</short>
<descr>
<p>
Calls SendSimpleMessage to send the message to the target.
</p>
</descr>
<seealso/>
</element>
<element name="LCLSendKillFocusMsg.Result">
<short>
Pointer to the Integer result code for the message. 0 indicates the message 
was accepted. A non-zero value indicates the message was rejected.
</short>
</element>
<element name="LCLSendKillFocusMsg.Target">
<short>
The control where the message is sent.
</short>
</element>

<element name="LCLSendShowWindowMsg">
<short>
Delivers a LM_SHOWWINDOW message to the target control.
</short>
<descr>
<p>
Calls DeliverMessage to apply or dispatch the message for the target control.
</p>
</descr>
<version>
Modified in LCL version 2.4 to use the values in the Show and Status arguments 
in the message for the target control.
</version>
<seealso/>
</element>
<element name="LCLSendShowWindowMsg.Result">
<short>
Pointer to the Integer result code for the message. 0 indicates the message 
was accepted. A non-zero value indicates the message was rejected.
</short>
</element>
<element name="LCLSendShowWindowMsg.Target">
<short>
Component, control, or class instance where the message is delivered.
</short>
</element>
<element name="LCLSendShowWindowMsg.Show">
<short>
Contains <b>True</b> if the window is visible, otherwise <b>False</b>.
</short>
</element>
<element name="LCLSendShowWindowMsg.Status">
<short>
Normally contains zero. A non-zero value if the message was generated when 
another window was shown or hidden.
</short>
</element>

<element name="LCLSendSizeMsg">
<short>
Delivers a LM_SIZE message to the target control.
</short>
<descr>
<p>
The SizeType argument can contain values from the constants defined in the 
LCLType unit, like:
</p>
<dl>
<dt>SIZE_RESTORED (0)</dt>
<dd>This is the default value.</dd>
<dt>SIZE_MINIMIZED (1)</dt>
<dd>The target was minimized.</dd>
<dt>SIZE_MAXIMIZED (2)</dt>
<dd>The target was maximized.</dd>
<dt>SIZE_FULLSCREEN (16)</dt>
<dd>Non-WINAPI value to support wsFullScreen state.</dd>
<dt>Size_SourceIsInterface (128)</dt>
<dd>
This flag is automatically added to the argument value when FromInterface is 
set to <b>True</b>.
</dd>
</dl>
<p>
Calls DeliverMessage to apply or dispatch the message to the target.
</p>    
</descr>
<seealso/>
</element>
<element name="LCLSendSizeMsg.Result">
<short>
Pointer to the Integer result code for the message. 0 indicates the message 
was accepted. A non-zero value indicates the message was rejected.
</short>
</element>
<element name="LCLSendSizeMsg.Target">
<short>
Component, control, or class instance where the message is delivered.
</short>
</element>
<element name="LCLSendSizeMsg.Width">
<short>
Contains the new width in pixels for the target.
</short>
</element>
<element name="LCLSendSizeMsg.Height">
<short>
Contains the new height in pixels for the target.
</short>
</element>
<element name="LCLSendSizeMsg.SizeType">
<short>
<b>True</b> if the message was sent from the widgetset to notify the LCL of a 
size change.  <b>False</b> to make the widgetset change the size of the 
control. Default value is <b>True</b>.
</short>
</element>
<element name="LCLSendSizeMsg.FromInterface">
<short>
Indicates whether the sizing message originated in the LCL interface. Default 
value is <b>True</b>.
</short>
</element>

<element name="LCLSendMoveMsg">
<short>
Delivers a LM_MOVE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMoveMsg.Result">
<short/>
</element>
<element name="LCLSendMoveMsg.Target">
<short/>
</element>
<element name="LCLSendMoveMsg.XPos">
<short/>
</element>
<element name="LCLSendMoveMsg.YPos">
<short/>
</element>
<element name="LCLSendMoveMsg.MoveType">
<short/>
</element>
<element name="LCLSendMoveMsg.FromInterface">
<short/>
</element>

<element name="LCLSendMouseMoveMsg">
<short>
Delivers a LM_MouseMove message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseMoveMsg.Result">
<short/>
</element>
<element name="LCLSendMouseMoveMsg.Target">
<short/>
</element>
<element name="LCLSendMouseMoveMsg.XPos">
<short/>
</element>
<element name="LCLSendMouseMoveMsg.YPos">
<short/>
</element>
<element name="LCLSendMouseMoveMsg.ShiftState">
<short/>
</element>

<element name="LCLSendMouseDownMsg">
<short>
Delivers a TLMMouse button down message for the specified button to the target 
control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseDownMsg.Result">
<short/>
</element>
<element name="LCLSendMouseDownMsg.Target">
<short/>
</element>
<element name="LCLSendMouseDownMsg.XPos">
<short/>
</element>
<element name="LCLSendMouseDownMsg.YPos">
<short/>
</element>
<element name="LCLSendMouseDownMsg.Button">
<short/>
</element>
<element name="LCLSendMouseDownMsg.ShiftState">
<short/>
</element>

<element name="LCLSendMouseUpMsg">
<short>
Delivers a TLMMouse button up message for the specified button to the target 
control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseUpMsg.Result">
<short/>
</element>
<element name="LCLSendMouseUpMsg.Target">
<short/>
</element>
<element name="LCLSendMouseUpMsg.XPos">
<short/>
</element>
<element name="LCLSendMouseUpMsg.YPos">
<short/>
</element>
<element name="LCLSendMouseUpMsg.Button">
<short/>
</element>
<element name="LCLSendMouseUpMsg.ShiftState">
<short/>
</element>

<element name="LCLSendMouseWheelMsg">
<short>
Delivers a TLMMouseEvent mouse wheel message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseWheelMsg.Result">
<short/>
</element>
<element name="LCLSendMouseWheelMsg.Target">
<short/>
</element>
<element name="LCLSendMouseWheelMsg.XPos">
<short/>
</element>
<element name="LCLSendMouseWheelMsg.YPos">
<short/>
</element>
<element name="LCLSendMouseWheelMsg.WheelDelta">
<short/>
</element>
<element name="LCLSendMouseWheelMsg.ShiftState">
<short/>
</element>

<element name="LCLSendCaptureChangedMsg">
<short>
Sends a LM_CAPTURECHANGED message to the target control.
</short>
<descr>
<p>
A capture changed message occurs when mouse capture for a control is enabled. 
Mouse capture indicates that mouse input is redirected to the target control, 
even when the mouse pointer is not within the bounds for the control.
</p>
</descr>
<seealso/>
</element>
<element name="LCLSendCaptureChangedMsg.Result">
<short/>
</element>
<element name="LCLSendCaptureChangedMsg.Target">
<short/>
</element>

<element name="LCLSendSelectionChangedMsg">
<short>
Sends a LM_SELCHANGE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendSelectionChangedMsg.Result">
<short/>
</element>
<element name="LCLSendSelectionChangedMsg.Target">
<short/>
</element>

<element name="LCLSendDestroyMsg">
<short>
Sends a LM_DESTROY message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendDestroyMsg.Result">
<short/>
</element>
<element name="LCLSendDestroyMsg.Target">
<short/>
</element>

<element name="LCLSendChangedMsg">
<short>
Delivers a LM_CHANGED message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendChangedMsg.Result">
<short/>
</element>
<element name="LCLSendChangedMsg.Target">
<short/>
</element>
<element name="LCLSendChangedMsg.ItemIndex">
<short/>
</element>

<element name="LCLSendClickedMsg">
<short>
Sends a LM_CLICKED message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendClickedMsg.Result">
<short/>
</element>
<element name="LCLSendClickedMsg.Target">
<short/>
</element>

<element name="LCLSendMouseEnterMsg">
<short>
Sends a CM_MOUSEENTER control message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseEnterMsg.Result">
<short/>
</element>
<element name="LCLSendMouseEnterMsg.Target">
<short/>
</element>

<element name="LCLSendMouseLeaveMsg">
<short>
Sends a CM_MOUSELEAVE control message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseLeaveMsg.Result">
<short/>
</element>
<element name="LCLSendMouseLeaveMsg.Target">
<short/>
</element>

<element name="LCLSendSetEditableMsg">
<short>
Sends a LM_SETEDITABLE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendSetEditableMsg.Result">
<short/>
</element>
<element name="LCLSendSetEditableMsg.Target">
<short/>
</element>

<element name="LCLSendMoveWordMsg">
<short>
Sends a LM_MOVEWORD message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMoveWordMsg.Result">
<short/>
</element>
<element name="LCLSendMoveWordMsg.Target">
<short/>
</element>

<element name="LCLSendMovePageMsg">
<short>
Sends a LM_MOVEPAGE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMovePageMsg.Result">
<short/>
</element>
<element name="LCLSendMovePageMsg.Target">
<short/>
</element>

<element name="LCLSendMoveToRowMsg">
<short>
Sends a LM_MOVETOROW message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMoveToRowMsg.Result">
<short/>
</element>
<element name="LCLSendMoveToRowMsg.Target">
<short/>
</element>

<element name="LCLSendMoveToColumnMsg">
<short>
Sends a LM_MOVETOCOLUMN message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMoveToColumnMsg.Result">
<short/>
</element>
<element name="LCLSendMoveToColumnMsg.Target">
<short/>
</element>

<element name="LCLSendKillCharMsg">
<short>
Sends a LM_KILLCHAR message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendKillCharMsg.Result">
<short/>
</element>
<element name="LCLSendKillCharMsg.Target">
<short/>
</element>

<element name="LCLSendKillWordMsg">
<short>
Sends a LM_KILLWORD message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendKillWordMsg.Result">
<short/>
</element>
<element name="LCLSendKillWordMsg.Target">
<short/>
</element>

<element name="LCLSendKillLineMsg">
<short>
Sends a LM_KILLLINE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendKillLineMsg.Result">
<short/>
</element>
<element name="LCLSendKillLineMsg.Target">
<short/>
</element>

<element name="LCLSendCutToClipboardMsg">
<short>
Sends a LM_CUT message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendCutToClipboardMsg.Result">
<short/>
</element>
<element name="LCLSendCutToClipboardMsg.Target">
<short/>
</element>

<element name="LCLSendCopyToClipboardMsg">
<short>
Sends a LM_COPY message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendCopyToClipboardMsg.Result">
<short/>
</element>
<element name="LCLSendCopyToClipboardMsg.Target">
<short/>
</element>

<element name="LCLSendPasteFromClipboardMsg">
<short>
Sends a LM_PASTE message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendPasteFromClipboardMsg.Result">
<short/>
</element>
<element name="LCLSendPasteFromClipboardMsg.Target">
<short/>
</element>

<element name="LCLSendConfigureEventMsg">
<short>
Sends a LM_CONFIGUREEVENT message to the target control.
</short>
<short/>
<descr/>
<seealso/>
</element>
<element name="LCLSendConfigureEventMsg.Result">
<short/>
</element>
<element name="LCLSendConfigureEventMsg.Target">
<short/>
</element>

<element name="LCLSendPaintMsg">
<short>
Delivers a LM_PAINT message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendPaintMsg.Result">
<short/>
</element>
<element name="LCLSendPaintMsg.Target">
<short/>
</element>
<element name="LCLSendPaintMsg.DC">
<short/>
</element>
<element name="LCLSendPaintMsg.PaintStruct">
<short/>
</element>

<element name="LCLSendEraseBackgroundMsg">
<short>
Delivers a LM_ERASEBKGND message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendEraseBackgroundMsg.Result">
<short/>
</element>
<element name="LCLSendEraseBackgroundMsg.Target">
<short/>
</element>
<element name="LCLSendEraseBackgroundMsg.DC">
<short/>
</element>

<element name="LCLSendKeyDownEvent">
<short>
Delivers a key down message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendKeyDownEvent.Result">
<short/>
</element>
<element name="LCLSendKeyDownEvent.Target">
<short/>
</element>
<element name="LCLSendKeyDownEvent.CharCode">
<short/>
</element>
<element name="LCLSendKeyDownEvent.KeyData">
<short/>
</element>
<element name="LCLSendKeyDownEvent.BeforeEvent">
<short/>
</element>
<element name="LCLSendKeyDownEvent.IsSysKey">
<short/>
</element>

<element name="LCLSendKeyUpEvent">
<short>
Delivers a key up message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendKeyUpEvent.Result">
<short/>
</element>
<element name="LCLSendKeyUpEvent.Target">
<short/>
</element>
<element name="LCLSendKeyUpEvent.CharCode">
<short/>
</element>
<element name="LCLSendKeyUpEvent.KeyData">
<short/>
</element>
<element name="LCLSendKeyUpEvent.BeforeEvent">
<short/>
</element>
<element name="LCLSendKeyUpEvent.IsSysKey">
<short/>
</element>

<element name="LCLSendCharEvent">
<short>
Delivers a TLMChar message to the target control (and optionally to the 
application).
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendCharEvent.Result">
<short/>
</element>
<element name="LCLSendCharEvent.Target">
<short/>
</element>
<element name="LCLSendCharEvent.CharCode">
<short/>
</element>
<element name="LCLSendCharEvent.KeyData">
<short/>
</element>
<element name="LCLSendCharEvent.BeforeEvent">
<short/>
</element>
<element name="LCLSendCharEvent.IsSysKey">
<short/>
</element>
<element name="LCLSendCharEvent.ANotifyUserInput">
<short/>
</element>

<element name="LCLSendUTF8KeyPress">
<short>
Applies the specified UTF-8-encoded character to the target control.
</short>
<descr/>
<version>
Modified in LCL version 2.4 to change the AUTF8Char argument to a variable 
parameter.
</version>
<seealso/>
</element>
<element name="LCLSendUTF8KeyPress.Result">
<short/>
</element>
<element name="LCLSendUTF8KeyPress.Target">
<short/>
</element>
<element name="LCLSendUTF8KeyPress.AUTF8Char">
<short/>
</element>
<element name="LCLSendUTF8KeyPress.IsSysKey">
<short/>
</element>

<element name="LCLSendTimerMsg">
<short>
Delivers a LM_TIMER message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendTimerMsg.Result">
<short/>
</element>
<element name="LCLSendTimerMsg.Target">
<short/>
</element>
<element name="LCLSendTimerMsg.TimerID">
<short/>
</element>
<element name="LCLSendTimerMsg.TimerProc">
<short/>
</element>

<element name="LCLSendExitMsg">
<short>
Sends a LM_EXIT message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendExitMsg.Result">
<short/>
</element>
<element name="LCLSendExitMsg.Target">
<short/>
</element>

<element name="LCLSendCloseQueryMsg">
<short>
Sends a LM_CLOSEQUERY message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendCloseQueryMsg.Result">
<short/>
</element>
<element name="LCLSendCloseQueryMsg.Target">
<short/>
</element>

<element name="LCLSendDragStartMsg">
<short>
Sends a LM_DRAGSTART message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendDragStartMsg.Result">
<short/>
</element>
<element name="LCLSendDragStartMsg.Target">
<short/>
</element>

<element name="LCLSendMonthChangedMsg">
<short>
Sends a LM_MONTHCHANGED message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMonthChangedMsg.Result">
<short/>
</element>
<element name="LCLSendMonthChangedMsg.Target">
<short/>
</element>

<element name="LCLSendYearChangedMsg">
<short>
Sends a LM_YEARCHANGED message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendYearChangedMsg.Result">
<short/>
</element>
<element name="LCLSendYearChangedMsg.Target">
<short/>
</element>

<element name="LCLSendDayChangedMsg">
<short>
Sends a LM_DAYCHANGED message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendDayChangedMsg.Result">
<short/>
</element>
<element name="LCLSendDayChangedMsg.Target">
<short/>
</element>

<element name="LCLSendMouseMultiClickMsg">
<short>
Delivers a TLMMouse message for multiple button clicks to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendMouseMultiClickMsg.Result">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.Target">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.XPos">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.YPos">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.Button">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.ClickCount">
<short/>
</element>
<element name="LCLSendMouseMultiClickMsg.ShiftState">
<short/>
</element>

<element name="LCLSendDrawListItemMsg">
<short>
Delivers a LM_DRAWLISTITEM message using the specified drawing structure to 
the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendDrawListItemMsg.Result">
<short/>
</element>
<element name="LCLSendDrawListItemMsg.Target">
<short/>
</element>
<element name="LCLSendDrawListItemMsg.DrawListItemStruct">
<short/>
</element>

<element name="LCLSendDropDownMsg">
<short>
Delivers a CBN_DROPDOWN notification message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendDropDownMsg.Result">
<short/>
</element>
<element name="LCLSendDropDownMsg.Target">
<short/>
</element>

<element name="LCLSendCloseUpMsg">
<short>
Delivers a CBN_CLOSEUP notification message to the target control.
</short>
<descr/>
<seealso/>
</element>
<element name="LCLSendCloseUpMsg.Result">
<short/>
</element>
<element name="LCLSendCloseUpMsg.Target">
<short/>
</element>

</module>
<!-- LCLMessageGlue -->
</package>
</fpdoc-descriptions>
